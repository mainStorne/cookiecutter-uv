name: Deploy

on: [push, workflow_dispatch]

concurrency:
    group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
    cancel-in-progress: true

env:
    STUFF_BUCKET: auth-sevice-internal-use-bucket
    FOLDER_ID: b1g4o9t4vgcbnkpunqeu
    SERVICE_ACCOUNT_ID: ajetqfs3ng6e1gjv7mdr
    SECRET_VERSION_ID: e6qe0ts1dc9g0h1h4kob
    SECRET_ID: e6q78o6erk6o9suemkh4

jobs:
  # JOB to build and test {{cookiecutter.project_name}} code
  {{cookiecutter.project_name}}:
    needs: changes
    if: {% raw %}${{ needs.changes.outputs.{% endraw %}{{cookiecutter.project_name}}{% raw %} == 'true' }}{% endraw %}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
            python-version: "3.12"

      - uses: yezz123/setup-uv@v4

      - name: Create Zip Archieve
        working-directory: services/{{cookiecutter.project_name}}/{{cookiecutter.project_slug}}
        run: |
            uv sync
            uv pip freeze > requirements.txt

      - name: Deploy Function
        id: sls-func
        uses: yc-actions/yc-sls-function@v2.12.0
        with:
            yc-sa-json-credentials: {% raw %}${{secrets.YC_SA_JSON_CREDENTIALS}}{% endraw %}
            folder-id: {% raw %}${{env.FOLDER_ID}}{% endraw %}
            service-account: {% raw %}${{env.SERVICE_ACCOUNT_ID}}{% endraw %}
            source-root: services/{{cookiecutter.project_name}}/{{cookiecutter.project_slug}}
            function-name: '{{cookiecutter.project_name}}'
            runtime: 'python312'
            memory: '256Mb'
            entrypoint: 'main.handler'
            bucket: {% raw %}${{env.STUFF_BUCKET}}{% endraw %}
            secrets: |
                {% raw %}OAUTH_KEY=${{env.SECRET_ID}}/${{env.SECRET_VERSION_ID}}/OAUTH_KEY{% endraw %}
                {% raw %}DOCUMENT_API_ENDPOINT=${{env.SECRET_ID}}/${{env.SECRET_VERSION_ID}}/DOCUMENT_API_ENDPOINT{% endraw %}
                {% raw %}DOCUMENT_DATABASE_PATH=${{env.SECRET_ID}}/${{env.SECRET_VERSION_ID}}/DOCUMENT_DATABASE_PATH{% endraw %}
                {% raw %}AWS_ACCESS_KEY_ID=${{env.SECRET_ID}}/${{env.SECRET_VERSION_ID}}/AWS_ACCESS_KEY_ID{% endraw %}
                {% raw %}AWS_SECRET_ACCESS_KEY=${{env.SECRET_ID}}/${{env.SECRET_VERSION_ID}}/AWS_SECRET_ACCESS_KEY{% endraw %}
                {% raw %}JWT_PRIVATE_KEY=${{env.SECRET_ID}}/${{env.SECRET_VERSION_ID}}/JWT_PRIVATE_KEY{% endraw %}

            include: |
                **/*.py
                requirements.txt
            exclude: |
                .venv 
                uv.lock
                README.md
                pyproject.toml
                .*

            execution-timeout: 1


